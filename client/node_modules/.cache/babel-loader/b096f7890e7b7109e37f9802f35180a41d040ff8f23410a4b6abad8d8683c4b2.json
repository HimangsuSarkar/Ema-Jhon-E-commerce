{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from './firebaseConfig';\nexport const initializeLOgInFramework = () => {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  } else {\n    firebase.app(); // if already initialized, use that one\n  }\n};\n\nexport const handleGoogleSignIn = () => {\n  const provider = new firebase.auth.GoogleAuthProvider();\n  return firebase.auth().signInWithPopup(provider).then(res => {\n    const {\n      displayName,\n      photoURL,\n      email\n    } = res.user;\n    const signedInUser = {\n      isSignIn: true,\n      name: displayName,\n      email: email,\n      password: '',\n      photo: photoURL\n    };\n    return signedInUser;\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\nexport const handleSignOut = () => {\n  return firebase.auth().signOut().then(res => {\n    const signedOutUser = {\n      isSignIn: false,\n      name: '',\n      email: '',\n      photo: '',\n      error: '',\n      success: false\n    };\n    return signedOutUser;\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n};\n\n// export const createUserWithEmailAndPassword = () => {\n\n//     firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n//         .then(res => {\n//             const newUserInfo = { ...user };\n//             newUserInfo.error = '';\n//             newUserInfo.success = true;\n//             setUser(newUserInfo);\n//         })\n//         .catch(error => {\n//             const newUserInfo = { ...user };\n//             newUserInfo.error = error.message;\n//             newUserInfo.success = false;\n//             setUser(newUserInfo);\n//             updateUserName(user.name);\n//         });\n// }\n\n// export const signInWithEmailAndPassword = () => {\n//     firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n//         .then((res) => {\n//             const newUserInfo = { ...user };\n//             newUserInfo.error = '';\n//             newUserInfo.success = true;\n//             setUser(newUserInfo);\n//             setLoggedInUser(newUserInfo);\n//             history.replace(from);\n//             console.log('sign in user info', res.user);\n//         })\n//         .catch((error) => {\n//             const newUserInfo = { ...user };\n//             newUserInfo.error = error.message;\n//             newUserInfo.success = false;\n//             setUser(newUserInfo);\n//         });\n\n// }\n\n// const updateUserName = name => {\n//     const user = firebase.auth().currentUser;\n\n//     user.updateProfile({\n//         displayName: name,\n//     }).then(function () {\n//         console.log('user name updated successfully')\n//     }).catch(function (error) {\n//         console.log(error)\n//     });\n// }","map":{"version":3,"names":["firebase","firebaseConfig","initializeLOgInFramework","apps","length","initializeApp","app","handleGoogleSignIn","provider","auth","GoogleAuthProvider","signInWithPopup","then","res","displayName","photoURL","email","user","signedInUser","isSignIn","name","password","photo","catch","err","console","log","message","handleSignOut","signOut","signedOutUser","error","success"],"sources":["D:/Thesis/ema-jhon-e-commerce/src/components/Login/LoginManager.js"],"sourcesContent":["import firebase from \"firebase/app\"\r\nimport \"firebase/auth\"\r\nimport firebaseConfig from './firebaseConfig'\r\n\r\nexport const initializeLOgInFramework = () => {\r\n    if (!firebase.apps.length) {\r\n        firebase.initializeApp(firebaseConfig);\r\n    } else {\r\n        firebase.app(); // if already initialized, use that one\r\n    }\r\n\r\n}\r\n\r\nexport const handleGoogleSignIn = () => {\r\n    const provider = new firebase.auth.GoogleAuthProvider();\r\n    return firebase.auth().signInWithPopup(provider)\r\n        .then(res => {\r\n            const { displayName, photoURL, email } = res.user;\r\n            const signedInUser = {\r\n                isSignIn: true,\r\n                name: displayName,\r\n                email: email,\r\n                password: '',\r\n                photo: photoURL,\r\n            };\r\n            return signedInUser;\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            console.log(err.message);\r\n        })\r\n}\r\n\r\nexport const handleSignOut = () => {\r\n    return firebase.auth().signOut()\r\n        .then(res => {\r\n            const signedOutUser = {\r\n                isSignIn: false,\r\n                name: '',\r\n                email: '',\r\n                photo: '',\r\n                error: '',\r\n                success: false\r\n            };\r\n            return signedOutUser;\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            console.log(err.message);\r\n        })\r\n}\r\n\r\n// export const createUserWithEmailAndPassword = () => {\r\n\r\n//     firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n//         .then(res => {\r\n//             const newUserInfo = { ...user };\r\n//             newUserInfo.error = '';\r\n//             newUserInfo.success = true;\r\n//             setUser(newUserInfo);\r\n//         })\r\n//         .catch(error => {\r\n//             const newUserInfo = { ...user };\r\n//             newUserInfo.error = error.message;\r\n//             newUserInfo.success = false;\r\n//             setUser(newUserInfo);\r\n//             updateUserName(user.name);\r\n//         });\r\n// }\r\n\r\n// export const signInWithEmailAndPassword = () => {\r\n//     firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n//         .then((res) => {\r\n//             const newUserInfo = { ...user };\r\n//             newUserInfo.error = '';\r\n//             newUserInfo.success = true;\r\n//             setUser(newUserInfo);\r\n//             setLoggedInUser(newUserInfo);\r\n//             history.replace(from);\r\n//             console.log('sign in user info', res.user);\r\n//         })\r\n//         .catch((error) => {\r\n//             const newUserInfo = { ...user };\r\n//             newUserInfo.error = error.message;\r\n//             newUserInfo.success = false;\r\n//             setUser(newUserInfo);\r\n//         });\r\n\r\n// }\r\n\r\n// const updateUserName = name => {\r\n//     const user = firebase.auth().currentUser;\r\n\r\n//     user.updateProfile({\r\n//         displayName: name,\r\n//     }).then(function () {\r\n//         console.log('user name updated successfully')\r\n//     }).catch(function (error) {\r\n//         console.log(error)\r\n//     });\r\n// }"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,cAAc;AACnC,OAAO,eAAe;AACtB,OAAOC,cAAc,MAAM,kBAAkB;AAE7C,OAAO,MAAMC,wBAAwB,GAAGA,CAAA,KAAM;EAC1C,IAAI,CAACF,QAAQ,CAACG,IAAI,CAACC,MAAM,EAAE;IACvBJ,QAAQ,CAACK,aAAa,CAACJ,cAAc,CAAC;EAC1C,CAAC,MAAM;IACHD,QAAQ,CAACM,GAAG,EAAE,CAAC,CAAC;EACpB;AAEJ,CAAC;;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EACpC,MAAMC,QAAQ,GAAG,IAAIR,QAAQ,CAACS,IAAI,CAACC,kBAAkB,EAAE;EACvD,OAAOV,QAAQ,CAACS,IAAI,EAAE,CAACE,eAAe,CAACH,QAAQ,CAAC,CAC3CI,IAAI,CAACC,GAAG,IAAI;IACT,MAAM;MAAEC,WAAW;MAAEC,QAAQ;MAAEC;IAAM,CAAC,GAAGH,GAAG,CAACI,IAAI;IACjD,MAAMC,YAAY,GAAG;MACjBC,QAAQ,EAAE,IAAI;MACdC,IAAI,EAAEN,WAAW;MACjBE,KAAK,EAAEA,KAAK;MACZK,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAEP;IACX,CAAC;IACD,OAAOG,YAAY;EACvB,CAAC,CAAC,CACDK,KAAK,CAACC,GAAG,IAAI;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B,CAAC,CAAC;AACV,CAAC;AAED,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC/B,OAAO5B,QAAQ,CAACS,IAAI,EAAE,CAACoB,OAAO,EAAE,CAC3BjB,IAAI,CAACC,GAAG,IAAI;IACT,MAAMiB,aAAa,GAAG;MAClBX,QAAQ,EAAE,KAAK;MACfC,IAAI,EAAE,EAAE;MACRJ,KAAK,EAAE,EAAE;MACTM,KAAK,EAAE,EAAE;MACTS,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE;IACb,CAAC;IACD,OAAOF,aAAa;EACxB,CAAC,CAAC,CACDP,KAAK,CAACC,GAAG,IAAI;IACVC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAChBC,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,OAAO,CAAC;EAC5B,CAAC,CAAC;AACV,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}