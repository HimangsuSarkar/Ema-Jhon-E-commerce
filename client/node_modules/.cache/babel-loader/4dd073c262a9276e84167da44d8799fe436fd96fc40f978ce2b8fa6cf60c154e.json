{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CardElement, Elements, useStripe, useElements } from \"@stripe/react-stripe-js\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [paymentError, setPaymentError] = useState(null);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (elements == null) {\n      return;\n    }\n    const {\n      error,\n      paymentMethod\n    } = await stripe.createPaymentMethod({\n      type: \"card\",\n      card: elements.getElement(CardElement)\n    });\n    if (error) {\n      setPaymentError(error.message);\n    } else {\n      console.log(\"[PaymentMethod]\", paymentMethod);\n    }\n  };\n  return div;\n};\n_s(CheckoutForm, \"Gz2uD+66yFCbd2fx/dtVdo+WgIc=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useState","ReactDOM","CardElement","Elements","useStripe","useElements","CheckoutForm","_s","stripe","elements","paymentError","setPaymentError","handleSubmit","event","preventDefault","error","paymentMethod","createPaymentMethod","type","card","getElement","message","console","log","div","_c","$RefreshReg$"],"sources":["D:/Thesis/ema-jhon-e-commerce/src/components/ProcessPayment/CheckoutForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  CardElement,\r\n  Elements,\r\n  useStripe,\r\n  useElements,\r\n} from \"@stripe/react-stripe-js\";\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [paymentError, setPaymentError] = useState(null);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (elements == null) {\r\n      return;\r\n    }\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: elements.getElement(CardElement),\r\n    });\r\n    if (error) {\r\n      setPaymentError(error.message);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n    }\r\n  };\r\n\r\n  return (\r\n   div  \r\n  );\r\n};\r\n\r\nexport default CheckoutForm;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,WAAW;AAChC,SACEC,WAAW,EACXC,QAAQ,EACRC,SAAS,EACTC,WAAW,QACN,yBAAyB;AAEhC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,MAAM,GAAGJ,SAAS,EAAE;EAC1B,MAAMK,QAAQ,GAAGJ,WAAW,EAAE;EAC9B,MAAM,CAACK,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMY,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,EAAE;IAEtB,IAAIL,QAAQ,IAAI,IAAI,EAAE;MACpB;IACF;IAEA,MAAM;MAAEM,KAAK;MAAEC;IAAc,CAAC,GAAG,MAAMR,MAAM,CAACS,mBAAmB,CAAC;MAChEC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAEV,QAAQ,CAACW,UAAU,CAAClB,WAAW;IACvC,CAAC,CAAC;IACF,IAAIa,KAAK,EAAE;MACTJ,eAAe,CAACI,KAAK,CAACM,OAAO,CAAC;IAChC,CAAC,MAAM;MACLC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEP,aAAa,CAAC;IAC/C;EACF,CAAC;EAED,OACCQ,GAAG;AAEN,CAAC;AAACjB,EAAA,CA1BID,YAAY;EAAA,QACDF,SAAS,EACPC,WAAW;AAAA;AAAAoB,EAAA,GAFxBnB,YAAY;AA4BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}