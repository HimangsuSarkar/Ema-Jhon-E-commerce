{"ast":null,"code":"var _jsxFileName = \"D:\\\\Thesis\\\\ema-jhon-e-commerce\\\\src\\\\components\\\\ProcessPayment\\\\CheckoutForm.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { PaymentElement, LinkAuthenticationElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { UserContext } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CheckoutForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  // const [email, setEmail] = useState('');\n  // const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const [message, setMessage] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n    const clientSecret = new URLSearchParams(window.location.search).get(\"payment_intent_client_secret\");\n    if (!clientSecret) {\n      return;\n    }\n    stripe.retrievePaymentIntent(clientSecret).then(_ref => {\n      let {\n        paymentIntent\n      } = _ref;\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          setMessage(\"Payment succeeded!\");\n          break;\n        case \"processing\":\n          setMessage(\"Your payment is processing.\");\n          break;\n        case \"requires_payment_method\":\n          setMessage(\"Your payment was not successful, please try again.\");\n          break;\n        default:\n          setMessage(\"Something went wrong.\");\n          break;\n      }\n    });\n  }, [stripe]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"http://localhost:3000\"\n      }\n    });\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\n      setMessage(error.message);\n    } else {\n      setMessage(\"An unexpected error occurred.\");\n    }\n    setIsLoading(false);\n  };\n  const paymentElementOptions = {\n    layout: \"tabs\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    id: \"payment-form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(LinkAuthenticationElement, {\n      id: \"link-authentication-element\",\n      onChange: e => setLoggedInUser(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaymentElement, {\n      id: \"payment-element\",\n      options: paymentElementOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isLoading || !stripe || !elements,\n      id: \"submit\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        id: \"button-text\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"spinner\",\n          id: \"spinner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 24\n        }, this) : \"Pay now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"payment-message\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(CheckoutForm, \"I2mD8VtLUdS+pxXYAFWCJ5LM4cQ=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = CheckoutForm;\nexport default CheckoutForm;\nvar _c;\n$RefreshReg$(_c, \"CheckoutForm\");","map":{"version":3,"names":["React","useEffect","useState","useContext","PaymentElement","LinkAuthenticationElement","useStripe","useElements","UserContext","jsxDEV","_jsxDEV","CheckoutForm","_s","stripe","elements","message","setMessage","isLoading","setIsLoading","clientSecret","URLSearchParams","window","location","search","get","retrievePaymentIntent","then","_ref","paymentIntent","status","handleSubmit","e","preventDefault","error","confirmPayment","confirmParams","return_url","type","paymentElementOptions","layout","id","onSubmit","children","onChange","setLoggedInUser","target","value","fileName","_jsxFileName","lineNumber","columnNumber","options","disabled","className","_c","$RefreshReg$"],"sources":["D:/Thesis/ema-jhon-e-commerce/src/components/ProcessPayment/CheckoutForm.js"],"sourcesContent":["import React, { useEffect, useState,useContext } from \"react\";\r\nimport {\r\n  PaymentElement,\r\n  LinkAuthenticationElement,\r\n  useStripe,\r\n  useElements\r\n} from \"@stripe/react-stripe-js\";\r\nimport { UserContext } from \"../../App\";\r\n\r\nconst CheckoutForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  // const [email, setEmail] = useState('');\r\n  // const [loggedInUser, setLoggedInUser] = useContext(UserContext);\r\n  const [message, setMessage] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n   useEffect(() => {\r\n    if (!stripe) {\r\n      return;\r\n    }\r\n\r\n    const clientSecret = new URLSearchParams(window.location.search).get(\r\n      \"payment_intent_client_secret\"\r\n    );\r\n\r\n    if (!clientSecret) {\r\n      return;\r\n    }\r\n\r\n    stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\r\n      switch (paymentIntent.status) {\r\n        case \"succeeded\":\r\n          setMessage(\"Payment succeeded!\");\r\n          break;\r\n        case \"processing\":\r\n          setMessage(\"Your payment is processing.\");\r\n          break;\r\n        case \"requires_payment_method\":\r\n          setMessage(\"Your payment was not successful, please try again.\");\r\n          break;\r\n        default:\r\n          setMessage(\"Something went wrong.\");\r\n          break;\r\n      }\r\n    });\r\n  }, [stripe]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    setIsLoading(true);\r\n\r\n    const { error } = await stripe.confirmPayment({\r\n      elements,\r\n      confirmParams: {\r\n        // Make sure to change this to your payment completion page\r\n        return_url: \"http://localhost:3000\",\r\n      },\r\n    });\r\n\r\n    // This point will only be reached if there is an immediate error when\r\n    // confirming the payment. Otherwise, your customer will be redirected to\r\n    // your `return_url`. For some payment methods like iDEAL, your customer will\r\n    // be redirected to an intermediate site first to authorize the payment, then\r\n    // redirected to the `return_url`.\r\n    if (error.type === \"card_error\" || error.type === \"validation_error\") {\r\n      setMessage(error.message);\r\n    } else {\r\n      setMessage(\"An unexpected error occurred.\");\r\n    }\r\n\r\n    setIsLoading(false);\r\n  };\r\n\r\n  const paymentElementOptions = {\r\n    layout: \"tabs\"\r\n  }\r\n\r\n  return (\r\n    <form id=\"payment-form\" onSubmit={handleSubmit}>\r\n      <LinkAuthenticationElement\r\n        id=\"link-authentication-element\"\r\n        onChange={(e) => setLoggedInUser(e.target.value)}\r\n      />\r\n      <PaymentElement id=\"payment-element\" options={paymentElementOptions} />\r\n      <button disabled={isLoading || !stripe || !elements} id=\"submit\">\r\n        <span id=\"button-text\">\r\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : \"Pay now\"}\r\n        </span>\r\n      </button>\r\n      {/* Show any error or success messages */}\r\n      {message && <div id=\"payment-message\">{message}</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CheckoutForm;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}